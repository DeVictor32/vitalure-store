// Cache de seletores comuns
const $ = selector => document.querySelector(selector);
const $$ = selector => document.querySelectorAll(selector);

// Cache de elementos DOM frequentemente usados
const domCache = {
  productsContainer: null,
  modal: null,
  videoModal: null,
  mobileMenu: null
};

// Inicializa cache DOM
function initDOMCache() {
  domCache.productsContainer = $('#products-section-bottom');
  domCache.modal = $('#product-modal');
  domCache.videoModal = $('#videoModal');
  domCache.mobileMenu = $('#mobileMenu');
}

// Renderiza produtos com DocumentFragment
function displayProducts() {
  if (!domCache.productsContainer) return;
  
  const fragment = document.createDocumentFragment();
  
  products.forEach((product, index) => {
    const div = document.createElement('div');
    div.className = 'products-section-info';
    div.dataset.productIndex = index;
    div.setAttribute('data-aos', 'fade-up');
    
    div.innerHTML = `
      <div class="info-boxes-img-container">
        <div class="product-content">
          <h2>${product.title}</h2>
          <img src="${product.image}" alt="${product.title}" style="cursor:pointer" loading="lazy">
        </div>
        <div class="button-container">
          <button class="product-button">Ver Detalhes</button>
        </div>
      </div>`;
      
    fragment.appendChild(div);
  });
  
  domCache.productsContainer.appendChild(fragment);
  
  // Event delegation
  domCache.productsContainer.addEventListener('click', handleProductClick);
}

function handleProductClick(e) {
  const productCard = e.target.closest('.products-section-info');
  if (!productCard) return;
  
  if (e.target.matches('img, .product-button')) {
    openModal(Number(productCard.dataset.productIndex));
  }
}

// Funções do Modal - Mantém o mesmo conteúdo mas otimiza a execução
function createModalContent(product) {
  return `
    <button class="modal-close" onclick="closeModal()">&times;</button>
    <div class="modal-product-content">
      <div class="modal-product-image">
        <img src="${product.image}" alt="${product.title}" loading="lazy">
      </div>
      <div class="modal-product-info">
        <h2>${product.title}</h2>
        <p>${product.text}</p>
        <div class="modal-product-details">
          <h3>Benefícios</h3>
          <ul>${product.benefits.map(benefit => `<li>${benefit}</li>`).join('')}</ul>
        </div>
        <a href="${product.amazonLink}" target="_blank" rel="noopener noreferrer" class="amazon-button">
          Compre Agora<img class="flags" src="assets/icons/brasilFlag.png" alt="Brasil">
        </a>
        <a href="${product.amazonLinkEU}" target="_blank" rel="noopener noreferrer" class="amazon-button">
          Compre Agora<img class="flags" src="assets/icons/euroFlag.webp" alt="Europa">
        </a>
        <p class="disclaimer-text" style="font-size:0.8rem;color:#666;margin-top:10px;text-align:center">
          * Os produtos, marcas e disponibilidade podem variar entre as regiões do Brasil e Europa.
        </p>
      </div>
    </div>`;
}

// Otimiza eventos do modal
const modalHandlers = {
  open(index) {
    const product = products[index];
    if (!product || !domCache.modal) return;
    
    domCache.modal.querySelector('.modal-content').innerHTML = createModalContent(product);
    domCache.modal.style.display = "flex";
    requestAnimationFrame(() => domCache.modal.classList.add('modal-active'));
  },
  
  close() {
    if (!domCache.modal) return;
    domCache.modal.classList.remove('modal-active');
    setTimeout(() => domCache.modal.style.display = "none", 300);
  }
};

// Gerenciamento otimizado de eventos
function setupEventListeners() {
  // Menu Mobile
  const menuToggle = $('.menu-toggle');
  if (menuToggle && domCache.mobileMenu) {
    menuToggle.addEventListener('click', () => {
      menuToggle.classList.toggle('active');
      domCache.mobileMenu.classList.toggle('active');
    });

    domCache.mobileMenu.addEventListener('click', e => {
      if (e.target.tagName === 'A') {
        menuToggle.classList.remove('active');
        domCache.mobileMenu.classList.remove('active');
      }
    });
  }

  // Scroll Suave
  $$('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', e => {
      e.preventDefault();
      $(anchor.getAttribute('href'))?.scrollIntoView({behavior:'smooth',block:'start'});
    }, {passive: false});
  });

  // Dark Mode
  const darkModeIcons = $$('#dark-mode-icon');
  darkModeIcons.forEach(icon => {
    icon.addEventListener('click', () => {
      document.body.classList.toggle('dark-theme');
      const isDark = document.body.classList.contains('dark-theme');
      darkModeIcons.forEach(i => i.src = `assets/icons/${isDark ? 'sun' : 'moon'}.png`);
    });
  });
}

// Inicialização otimizada
function init() {
  initDOMCache();
  setupEventListeners();
  displayProducts();
  displayTestimonials();
  
  if (typeof AOS === 'object') {
    AOS.init({duration:1000, once:true, offset:100});
  }
}

document.addEventListener('DOMContentLoaded', init, {passive:true});

// Expõe funções necessárias globalmente
window.openModal = modalHandlers.open;
window.closeModal = modalHandlers.close;